{"version":3,"sources":["components/SchedulerResults.js","components/ShowTasks.js","constants/TasksConstants.js","services/scan.js","services/sstf.js","services/fcfs.js","services/cscan.js","services/edf.js","services/fdscan.js","services/SchedulerService.js","components/AddTaskComponent.js","actions/TasksActions.js","App.js","serviceWorker.js","reducers/TaskReducer.js","reducers/RootReducer.js","reducers/store.js","index.js"],"names":["SchedulerResults","results","this","props","data","undefined","push","sstf","headMovement","fcfs","scan","cscan","edf","fdscan","taskDone","react_default","a","createElement","index_esm","width","height","chartType","loader","options","chart","title","subtitle","rootProps","data-testid","React","Component","connect","state","_state$TaskReducer","TaskReducer","tasks","ShowTasks","classes","length","className","root","Paper","Table_default","TableHead","TableRow","TableCell","align","TableBody","map","row","index","key","component","scope","arrivalTime","blockAddress","deadline","withStyles","padding","display","float","tasksConstants","ADD_TASK","RUN_SCHEDULER","proc","i","queue","time","actual","headPosition","direction","p","filter","task","Math","abs","tmp","shift","SchedulerService","Object","classCallCheck","procString","JSON","stringify","parse","AddTaskComponent","_this","possibleConstructorReturn","getPrototypeOf","call","handleAdd","bind","assertThisInitialized","handleChange","handleStart","event","newTask","dispatch","_this$state","waitingTime","type","input","e","setState","defineProperty","target","value","_this$props","start","runScheduler","_this2","react","insideRoot","TextField_default","marginTop","label","onChange","index_es","variant","onClick","App","Grid_default","container","spacing","grid","Paper_default","paper","components_SchedulerResults","components_AddTaskComponent","components_ShowTasks","theme","flexGrow","textAlign","color","palette","text","secondary","margin","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","arguments","action","concat","toConsumableArray","objectSpread","store","createStore","RootReducer","applyMiddleware","thunk","ReactDOM","render","Provider","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oTAIMA,mLAEM,IACIC,EAAYC,KAAKC,MAAjBF,QAIJG,EAAQ,CAAC,CAAC,aAAc,OAAQ,OAAQ,OAAQ,SAAU,MAAO,YA2BrE,YA1BeC,IAAXJ,GAGAG,EAAKE,KAAK,CACN,+BACAL,EAAQM,KAAKC,aACbP,EAAQQ,KAAKD,aACbP,EAAQS,KAAKF,aACbP,EAAQU,MAAMH,aACdP,EAAQW,IAAIJ,aACZP,EAAQY,OAAOL,eAEnBJ,EAAKE,KAAK,CACN,gBACAL,EAAQM,KAAKO,SACbb,EAAQQ,KAAKK,SACbb,EAAQS,KAAKI,SACbb,EAAQU,MAAMG,SACdb,EAAQW,IAAIE,SACZb,EAAQY,OAAOC,aAInBV,EAAKE,KAAK,CAAC,+BAAgC,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1DF,EAAKE,KAAK,CAAC,gBAAiB,EAAG,EAAG,EAAG,EAAG,EAAG,KAG3CS,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,MAAO,QACPC,OAAQ,QACRC,UAAU,MACVC,OAAQP,EAAAC,EAAAC,cAAA,4BACRb,KAAMA,EACNmB,QAAS,CACLC,MAAO,CACHC,MAAO,6BACPC,SAAU,qEAGlBC,UAAW,CAAEC,cAAe,eAhDjBC,IAAMC,WA4DtBC,kBALf,SAAyBC,GAAO,IAAAC,EACHD,EAAME,YAC/B,MAAO,CAACC,MAFoBF,EACrBE,MACQlC,QAFagC,EACdhC,UAIH8B,CAAyB/B,uECpDlCoC,mLAEO,IACGD,EAAUjC,KAAKC,MAAfgC,MACAE,EAAYnC,KAAKC,MAAjBkC,QACR,OAAIF,EAAMG,OAAS,QAAejC,IAAV8B,EACbpB,EAAAC,EAAAC,cAAA,YAGPF,EAAAC,EAAAC,cAAA,OAAKsB,UAAWF,EAAQG,MACpBzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,KACID,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACI5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACI7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,WACA9B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAWC,MAAM,SAAjB,gBACA/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAWC,MAAM,SAAjB,iBACA/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAWC,MAAM,SAAjB,cAGR/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACKZ,EAAMa,IAAI,SAACC,EAAKC,GAAN,OACPnC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUO,IAAKD,GACXnC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAWO,UAAU,KAAKC,MAAM,OAC3BH,GAELnC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIK,aAC9BvC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIM,cAC9BxC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAIO,wBA5B1C3B,IAAMC,WAuDfC,kBALf,SAAyBC,GAErB,MAAO,CAACG,MADQH,EAAME,YAAfC,QAIIJ,CAAyB0B,qBAhBzB,CACXjB,KAAM,CACFkB,QAAS,OACTC,QAAS,eACTC,MAAO,SAYyBH,CAAmBrB,4CCnE9CyB,EAAiB,CAC1BC,SAAU,WACVC,cAAe,iBCFZ,SAASrD,EAAKsD,GASjB,IARA,IAAIC,EAAI,EACJC,EAAQ,GACRC,EAAO,EACPC,OAAS/D,EACTgE,EAAe,EACf7D,EAAe,EACf8D,EAAY,EACZxD,EAAW,EACRmD,EAAID,EAAK1B,QAA2B,IAAjB4B,EAAM5B,QAAc,CAC1C,IAAK,IAAIiC,EAAIN,EAAGM,EAAIP,EAAK1B,OAAQiC,IACzBJ,GAAQH,EAAKO,GAAGjB,cAChBY,EAAM5D,KAAK0D,EAAKO,IAChBN,KAMR,GAAqB,KAHrBC,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,EAAKjB,UAAYkB,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBY,KAE/D7B,OAAc,CACpB8B,EAASF,EAAM,GAEf,IAAIU,EAAMV,EAAMM,OAAO,SAAUC,GAC7B,OAAOJ,EAAeI,EAAKlB,aAAee,IAE3B,IAAfM,EAAItC,SACJgC,IAAc,EACdM,EAAMV,EAAMM,OAAO,SAAUC,GACzB,OAAOJ,EAAeI,EAAKlB,aAAee,KAIlDM,EAAI5B,IAAI,SAAUyB,GACVC,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBmB,KAAKC,IAAIN,EAAeD,EAAOb,gBAC5Ea,EAASK,KAGjBP,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,IAASL,IAEpB5D,GAAgBkE,KAAKC,IAAIN,EAAeD,EAAOb,cAC/CY,GAAQO,KAAKC,IAAIN,EAAeD,EAAOb,cACvCc,EAAeD,EAAOb,aACtBzC,SAEAqD,IAGR,MAAO,CAAE3D,eAAcM,YChDpB,SAASP,EAAKyD,GAQjB,IAPA,IAAIC,EAAI,EACJC,EAAQ,GACRC,EAAO,EACPC,OAAS/D,EACTgE,EAAe,EACf7D,EAAe,EACfM,EAAW,EACRmD,EAAID,EAAK1B,QAA2B,IAAjB4B,EAAM5B,QAAc,CAC1C,IAAK,IAAIiC,EAAIN,EAAGM,EAAIP,EAAK1B,OAAQiC,IACzBJ,GAAQH,EAAKO,GAAGjB,cAChBY,EAAM5D,KAAK0D,EAAKO,IAChBN,KAMa,KAHrBC,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,EAAKjB,UAAYkB,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBY,KAE/D7B,QACN8B,EAASF,EAAM,GACfA,EAAMlB,IAAI,SAAUyB,GACZC,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBmB,KAAKC,IAAIN,EAAeD,EAAOb,gBAC5Ea,EAASK,KAGjBP,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,IAASL,IAEpB5D,GAAgBkE,KAAKC,IAAIN,EAAeD,EAAOb,cAC/CY,GAAQO,KAAKC,IAAIN,EAAeD,EAAOb,cACvCc,EAAeD,EAAOb,aACtBzC,KAEAqD,IAGR,MAAO,CAAE3D,eAAcM,YClClB,SAASL,EAAKuD,GAQf,IAPA,IAAIC,EAAI,EACJC,EAAQ,GACRC,EAAO,EACPC,OAAS/D,EACTgE,EAAe,EACf7D,EAAe,EACfM,EAAW,EACRmD,EAAID,EAAK1B,QAA2B,IAAjB4B,EAAM5B,QAAc,CAC1C,IAAK,IAAIiC,EAAIN,EAAGM,EAAIP,EAAK1B,OAAQiC,IACzBJ,GAAQH,EAAKO,GAAGjB,cAChBY,EAAM5D,KAAK0D,EAAKO,IAChBN,KAMa,KAHrBC,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,EAAKjB,UAAYkB,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBY,KAE/D7B,QACN8B,EAASF,EAAMW,QACfrE,GAAgBkE,KAAKC,IAAIN,EAAeD,EAAOb,cAC/CY,GAAQO,KAAKC,IAAIN,EAAeD,EAAOb,cACvCc,EAAeD,EAAOb,aACtBzC,KAEAqD,IAGV,MAAO,CAAE3D,eAAcM,YC9BtB,SAASH,EAAMqD,GAQlB,IAPA,IAAIC,EAAI,EACJC,EAAQ,GACRC,EAAO,EACPC,OAAS/D,EACTgE,EAAe,EACf7D,EAAe,EACfM,EAAW,EACRmD,EAAID,EAAK1B,QAA2B,IAAjB4B,EAAM5B,QAAc,CAC1C,IAAK,IAAIiC,EAAIN,EAAGM,EAAIP,EAAK1B,OAAQiC,IACzBJ,GAAQH,EAAKO,GAAGjB,cAChBY,EAAM5D,KAAK0D,EAAKO,IAChBN,KAMR,GAAqB,KAHrBC,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,EAAKjB,UAAYkB,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBY,KAE/D7B,OAAc,CACpB8B,EAASF,EAAM,GAEf,IAAIU,EAAMV,EAAMM,OAAO,SAAUC,GAC7B,OAAOJ,EAAeI,EAAKlB,eAEZ,IAAfqB,EAAItC,SACJ9B,IAAiB6D,EAEjBA,EAAe,EACfO,EAAMV,EAAMM,OAAO,SAAUC,GACzB,OAAOJ,EAAeI,EAAKlB,gBAKnCqB,EAAI5B,IAAI,SAAUyB,GACVC,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBmB,KAAKC,IAAIN,EAAeD,EAAOb,gBAC5Ea,EAASK,KAGjBP,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,IAASL,IAEpB5D,GAAgBkE,KAAKC,IAAIN,EAAeD,EAAOb,cAC/CY,GAAQO,KAAKC,IAAIN,EAAeD,EAAOb,cACvCc,EAAeD,EAAOb,aACtBzC,SAGAqD,IAGR,MAAO,CAAE3D,eAAcM,YCnDpB,SAASF,EAAIoD,GAQhB,IAPA,IAAIC,EAAI,EACJC,EAAQ,GACRC,EAAO,EACPC,OAAS/D,EACTgE,EAAe,EACf7D,EAAe,EACfM,EAAW,EACRmD,EAAID,EAAK1B,QAA2B,IAAjB4B,EAAM5B,QAAc,CAC1C,IAAK,IAAIiC,EAAIN,EAAGM,EAAIP,EAAK1B,OAAQiC,IACzBJ,GAAQH,EAAKO,GAAGjB,cAChBY,EAAM5D,KAAK0D,EAAKO,IAChBN,KAMa,KAHrBC,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,EAAKjB,UAAYkB,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBY,KAE/D7B,QACN8B,EAASF,EAAM,GACfA,EAAMlB,IAAI,SAAUyB,GACZA,EAAKjB,SAAWY,EAAOZ,WACvBY,EAASK,KAGjBP,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,IAASL,IAEpB5D,GAAgBkE,KAAKC,IAAIN,EAAeD,EAAOb,cAC/CY,GAAQO,KAAKC,IAAIN,EAAeD,EAAOb,cACvCc,EAAeD,EAAOb,aACtBzC,KAEAqD,IAGR,MAAO,CAAE3D,eAAcM,YCpCpB,SAASD,EAAOmD,GAQnB,IAPA,IAAIC,EAAI,EACJC,EAAQ,GACRC,EAAO,EACPC,OAAS/D,EACTgE,EAAe,EACf7D,EAAe,EACfM,EAAW,EACRmD,EAAID,EAAK1B,QAA2B,IAAjB4B,EAAM5B,QAAc,CAC1C,IAAK,IAAIiC,EAAIN,EAAGM,EAAIP,EAAK1B,OAAQiC,IACzBJ,GAAQH,EAAKO,GAAGjB,cAChBY,EAAM5D,KAAK0D,EAAKO,IAChBN,KAMa,KAHrBC,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,EAAKjB,UAAYkB,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBY,KAE/D7B,QACN8B,EAASF,EAAM,GACfA,EAAMlB,IAAI,SAAUyB,GACZA,EAAKjB,SAAWkB,KAAKC,IAAIN,EAAeI,EAAKlB,cAAgBY,EAAOC,EAAOZ,SAAWkB,KAAKC,IAAIN,EAAeD,EAAOb,cAAgBY,IACrIC,EAASK,KAGjBP,EAAQA,EAAMM,OAAO,SAAUC,GAC3B,OAAOA,IAASL,IAEpB5D,GAAgBkE,KAAKC,IAAIN,EAAeD,EAAOb,cAC/CY,GAAQO,KAAKC,IAAIN,EAAeD,EAAOb,cACvCc,EAAeD,EAAOb,aACtBzC,KAEAqD,IAGR,MAAO,CAAE3D,eAAcM,gBCPZgE,aAnBX,SAAAA,EAAY3C,GAAO4C,OAAAC,EAAA,EAAAD,CAAA7E,KAAA4E,GACf5E,KAAKiC,MAAQA,sDAIb,IAAI8C,EAAaC,KAAKC,UAAUjF,KAAKiC,OASrC,MARgB,CACZ5B,KAAMA,EAAK2E,KAAKE,MAAMH,IACtBxE,KAAMA,EAAKyE,KAAKE,MAAMH,IACtBvE,KAAMA,EAAKwE,KAAKE,MAAMH,IACtBtE,MAAOA,EAAMuE,KAAKE,MAAMH,IACxBrE,IAAKA,EAAIsE,KAAKE,MAAMH,IACpBpE,OAAQA,EAAOqE,KAAKE,MAAMH,kBCZhCI,cAEF,SAAAA,EAAYlF,GAAM,IAAAmF,EAAA,OAAAP,OAAAC,EAAA,EAAAD,CAAA7E,KAAAmF,IACdC,EAAAP,OAAAQ,EAAA,EAAAR,CAAA7E,KAAA6E,OAAAS,EAAA,EAAAT,CAAAM,GAAAI,KAAAvF,KAAMC,KACD6B,MAAQ,CACTsB,YAAa,EACbC,aAAc,EACdC,SAAU,GAEd8B,EAAKI,UAAYJ,EAAKI,UAAUC,KAAfZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAO,KACjBA,EAAKO,aAAeP,EAAKO,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAO,KACpBA,EAAKQ,YAAcR,EAAKQ,YAAYH,KAAjBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAO,KATLA,yEAaRS,GAAM,ICrBIC,EDsBRC,EAAa/F,KAAKC,MAAlB8F,SADIC,EAEoChG,KAAK8B,MAA7CsB,EAFI4C,EAEJ5C,YAAaC,EAFT2C,EAES3C,aAAcC,EAFvB0C,EAEuB1C,SACnCyC,GCxBgBD,EDwBC,CACb1C,YAAaA,EAAc,EAAI,EAAGA,EAClCC,aAAcA,EAAe,EAAI,EAAIA,EACrCC,SAAUA,EAAW,EAAI,EAAIA,EAC7B2C,YAAa,GC3Bd,SAAAF,GAKHA,EAJe,CACXD,UACAI,KAAMvC,EAAeC,mDD4BhBuC,EAAOC,GAChBpG,KAAKqG,SAALxB,OAAAyB,EAAA,EAAAzB,CAAA,GACKsB,EAAQC,EAAEG,OAAOC,8CAIb,IAAAC,EACmBzG,KAAKC,OACjC8F,EAFSU,EACDV,UC7BT,SAAsB9D,GACzB,OAAO,SAAA8D,GAOHA,EAJe,CACXhG,QAHc,IAAI6E,EAAiB3C,GACfyE,QAGpBR,KAAMvC,EAAeE,iBDwBhB8C,CAFAF,EACSxE,yCAKd,IAAA2E,EAAA5G,KACImC,EAAYnC,KAAKC,MAAjBkC,QACR,OACI0E,EAAA,qBAAKxE,UAAWF,EAAQG,MACrBuE,EAAA,qBAAKxE,UAAWF,EAAQ2E,YAGvBD,EAAA,cAACE,EAAAjG,EAAD,CACIuB,UAAWF,EAAQ6E,UACnBC,MAAM,eACNf,KAAK,SACLgB,SAAU,SAAArB,GAAUe,EAAKjB,aAAa,cAAeE,MAEzDgB,EAAA,yBACAA,EAAA,cAACE,EAAAjG,EAAD,CACImG,MAAM,gBACNf,KAAK,SACLgB,SAAU,SAAArB,GAAUe,EAAKjB,aAAa,eAAgBE,MAE1DgB,EAAA,yBACAA,EAAA,cAACE,EAAAjG,EAAD,CACImG,MAAM,WACNf,KAAK,SACLgB,SAAU,SAAArB,GAAUe,EAAKjB,aAAa,WAAYE,MAEtDgB,EAAA,yBACAA,EAAA,yBACAA,EAAA,cAACM,EAAA,EAAD,CACIC,QAAQ,YACRC,QAASrH,KAAKwF,WAFlB,OAMAqB,EAAA,cAACM,EAAA,EAAD,CACIC,QAAQ,YACRC,QAASrH,KAAK4F,aAFlB,kBAvEejE,aA2GhBE,kBALf,SAAyBC,GAErB,MAAO,CAACG,MADQH,EAAME,YAAfC,QAIIJ,CAAyB0B,qBAxBzB,CAEXjB,KAAM,CACFmB,QAAS,eACTxC,MAAO,QACPC,OAAQ,SAGZ4F,WAAY,CACRrD,QAAS,gBAEbuD,UAAW,CACPA,UAAW,SAYqBzD,CAAmB4B,qBE1GrDmC,mLAEK,IACGnF,EAAYnC,KAAKC,MAAjBkC,QACV,OACEtB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,OACbxB,EAAAC,EAAAC,cAAA,UAAQsB,UAAU,eAEhBxB,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,CAAM0G,WAAS,EAACC,QAAS,GAAIpF,UAAWF,EAAQuF,MAC5C7G,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,KACID,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CAAOuB,UAAWF,EAAQyF,OAAO/G,EAAAC,EAAAC,cAAC8G,EAAD,QAErChH,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,KACID,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CAAOuB,UAAWF,EAAQyF,OAAO/G,EAAAC,EAAAC,cAAC+G,EAAD,QAErCjH,EAAAC,EAAAC,cAACgH,EAAD,eAfInG,aAyCH2B,uBAnBA,SAAAyE,GAAK,MAAK,CACrB1F,KAAM,CACF2F,SAAU,GAEdL,MAAO,CACHM,UAAW,SACXC,MAAOH,EAAMI,QAAQC,KAAKC,UAC1B7E,QAAS,eACTD,QAAS,OACT+E,OAAQ,QAEZb,KAAM,CACFa,OAAQ,OACRtH,MAAO,UAMAsC,CAAmB+D,GCxCdkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+FCfAC,EAAe,CACjB5G,MAAO,GACPlC,aAASI,GCFb,IAIe2I,EAJKC,YAAgB,CAChC/G,YDOG,WAAmD,IAA9BF,EAA8BkH,UAAA5G,OAAA,QAAAjC,IAAA6I,UAAA,GAAAA,UAAA,GAAtBH,EAAcI,EAAQD,UAAA5G,OAAA,EAAA4G,UAAA,QAAA7I,EACtD,OAAQ8I,EAAO/C,MACX,KAAKvC,EAAeC,SAChB,MAAO,CACH3B,MAAK,GAAAiH,OAAArE,OAAAsE,EAAA,EAAAtE,CAAM/C,EAAMG,OAAZ,CAAmBgH,EAAOnD,UAC/B/F,QAAS+B,EAAM/B,SAEvB,KAAK4D,EAAeE,cAApB,IACY9D,EAAYkJ,EAAZlJ,QACR,OAAA8E,OAAAuE,EAAA,EAAAvE,CAAA,GACO/C,EADP,CAEI/B,QAASA,IAEjB,QACI,OAAA8E,OAAAuE,EAAA,EAAAvE,CAAA,GACO/C,0BEnBNuH,GAAQC,YACjBC,EACAC,YAAgBC,OCDpBC,IAASC,OACL9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAUP,MAAOA,IAAOxI,EAAAC,EAAAC,cAAC8I,EAAD,OACxBC,SAASC,eAAe,SJuHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3e5379e2.chunk.js","sourcesContent":["import {connect} from \"react-redux\";\nimport React from \"react\";\nimport Chart from \"react-google-charts\";\n\nclass SchedulerResults extends React.Component {\n\n    render(){\n        const { results } = this.props;\n        // if (results === undefined){\n        //     return(<div></div>)\n        // };\n        let data =  [['Algorithms', 'SSTF', 'FCFS', 'SCAN', 'C-SCAN', 'EDF', 'FD-SCAN']];\n        if (results!== undefined) {\n\n\n            data.push([\n                'time based on head movements',\n                results.sstf.headMovement,\n                results.fcfs.headMovement,\n                results.scan.headMovement,\n                results.cscan.headMovement,\n                results.edf.headMovement,\n                results.fdscan.headMovement\n            ]);\n            data.push([\n                'task finished',\n                results.sstf.taskDone,\n                results.fcfs.taskDone,\n                results.scan.taskDone,\n                results.cscan.taskDone,\n                results.edf.taskDone,\n                results.fdscan.taskDone\n            ]);\n        }\n        else {\n            data.push(['time based on head movements', 0, 0, 0, 0, 0, 0]);\n            data.push(['task finished', 0, 0, 0, 0, 0, 0]);\n        }\n        return(\n            <div>\n                <Chart\n                    width={'500px'}\n                    height={'300px'}\n                    chartType=\"Bar\"\n                    loader={<div>Loading Chart</div>}\n                    data={data}\n                    options={{\n                        chart: {\n                            title: 'Disk scheduling algorithms',\n                            subtitle: 'simulation of algorithms FCFS, SSTF, SCAN, C-SCAN, EDF, FD-SCAN.',\n                        },\n                    }}\n                    rootProps={{ 'data-testid': '2' }}\n                />\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const {tasks, results} = state.TaskReducer;\n    return {tasks, results}\n}\n\nexport default connect(mapStateToProps)(SchedulerResults)\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\nimport TableHead from \"@material-ui/core/es/TableHead/TableHead\";\nimport TableCell from \"@material-ui/core/es/TableCell/TableCell\";\nimport TableBody from \"@material-ui/core/es/TableBody/TableBody\";\nimport TableRow from \"@material-ui/core/es/TableRow/TableRow\";\nimport { withStyles} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\n\nclass ShowTasks extends React.Component{\n\n    render() {\n        const { tasks } = this.props;\n        const { classes } = this.props;\n        if (tasks.length < 1 || tasks === undefined){\n            return <div/>\n        }\n        return(\n            <div className={classes.root}>\n                <Paper>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>id</TableCell>\n                                <TableCell align=\"right\">arrival time</TableCell>\n                                <TableCell align=\"right\">block address</TableCell>\n                                <TableCell align=\"right\">deadline</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tasks.map((row, index) => (\n                                <TableRow key={index}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {index}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{row.arrivalTime}</TableCell>\n                                    <TableCell align=\"right\">{row.blockAddress}</TableCell>\n                                    <TableCell align=\"right\">{row.deadline}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    root: {\n        padding: \"15px\",\n        display: \"inline-block\",\n        float: \"left\"\n    },\n};\nShowTasks.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n    const {tasks} = state.TaskReducer;\n    return {tasks}\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(ShowTasks));\n","export const tasksConstants = {\n    ADD_TASK: 'ADD_TASK',\n    RUN_SCHEDULER: 'RUN_SCHEDULER',\n}\n","export function scan(proc){\n    let i = 0;\n    let queue = [];\n    let time = 0;\n    let actual = undefined;\n    let headPosition = 0;\n    let headMovement = 0;\n    let direction = 1;\n    let taskDone = 0;\n    while (i < proc.length || queue.length !== 0) {\n        for (let p = i; p < proc.length; p++){\n            if (time >= proc[p].arrivalTime){\n                queue.push(proc[p]);\n                i++;\n            }\n        }\n        queue = queue.filter(function (task) {\n            return task.deadline >= Math.abs(headPosition - task.blockAddress) + time\n        });\n        if (queue.length !== 0) {\n            actual = queue[0];\n\n            let tmp = queue.filter(function (task) {\n                return headPosition < task.blockAddress * direction\n            });\n            if (tmp.length === 0){\n                direction *= -1;\n                tmp = queue.filter(function (task) {\n                    return headPosition < task.blockAddress * direction\n                })\n            }\n\n            tmp.map(function (task) {\n                if (Math.abs(headPosition - task.blockAddress) < Math.abs(headPosition - actual.blockAddress)){\n                    actual = task;\n                }\n            });\n            queue = queue.filter(function (task) {\n                return task !== actual;\n            });\n            headMovement += Math.abs(headPosition - actual.blockAddress);\n            time += Math.abs(headPosition - actual.blockAddress);\n            headPosition = actual.blockAddress;\n            taskDone++;\n        }else {\n            time++;\n        }\n    }\n    return { headMovement, taskDone }\n}\n\n","export function sstf(proc){\n    let i = 0;\n    let queue = [];\n    let time = 0;\n    let actual = undefined;\n    let headPosition = 0;\n    let headMovement = 0;\n    let taskDone = 0;\n    while (i < proc.length || queue.length !== 0) {\n        for (let p = i; p < proc.length; p++){\n            if (time >= proc[p].arrivalTime){\n                queue.push(proc[p]);\n                i++;\n            }\n        }\n        queue = queue.filter(function (task) {\n            return task.deadline >= Math.abs(headPosition - task.blockAddress) + time\n        });\n        if (queue.length !== 0) {\n            actual = queue[0];\n            queue.map(function (task) {\n                if (Math.abs(headPosition - task.blockAddress) < Math.abs(headPosition - actual.blockAddress)){\n                    actual = task;\n                }\n            });\n            queue = queue.filter(function (task) {\n                return task !== actual;\n            });\n            headMovement += Math.abs(headPosition - actual.blockAddress);\n            time += Math.abs(headPosition - actual.blockAddress);\n            headPosition = actual.blockAddress;\n            taskDone++;\n        }else {\n            time++;\n        }\n    }\n    return { headMovement, taskDone }\n}\n\n// export default sstf;\n","\n\n  export function fcfs(proc){\n        let i = 0;\n        let queue = [];\n        let time = 0;\n        let actual = undefined;\n        let headPosition = 0;\n        let headMovement = 0;\n        let taskDone = 0;\n        while (i < proc.length || queue.length !== 0) {\n            for (let p = i; p < proc.length; p++){\n                if (time >= proc[p].arrivalTime){\n                    queue.push(proc[p]);\n                    i++;\n                }\n            }\n            queue = queue.filter(function (task) {\n                return task.deadline >= Math.abs(headPosition - task.blockAddress) + time\n            });\n            if (queue.length !== 0) {\n                actual = queue.shift();\n                headMovement += Math.abs(headPosition - actual.blockAddress);\n                time += Math.abs(headPosition - actual.blockAddress);\n                headPosition = actual.blockAddress;\n                taskDone++;\n            }else {\n                time++;\n            }\n        }\n      return { headMovement, taskDone }\n    }\n\n","export function cscan(proc){\n    let i = 0;\n    let queue = [];\n    let time = 0;\n    let actual = undefined;\n    let headPosition = 0;\n    let headMovement = 0;\n    let taskDone = 0;\n    while (i < proc.length || queue.length !== 0) {\n        for (let p = i; p < proc.length; p++){\n            if (time >= proc[p].arrivalTime){\n                queue.push(proc[p]);\n                i++;\n            }\n        }\n        queue = queue.filter(function (task) {\n            return task.deadline >= Math.abs(headPosition - task.blockAddress) + time\n        });\n        if (queue.length !== 0) {\n            actual = queue[0];\n\n            let tmp = queue.filter(function (task) {\n                return headPosition < task.blockAddress\n            });\n            if (tmp.length === 0){\n                headMovement -= -headPosition;//headMovement += headPosition\n                //fuck this dynamic typing\n                headPosition = 0;\n                tmp = queue.filter(function (task) {\n                    return headPosition < task.blockAddress\n                });\n            }\n\n\n            tmp.map(function (task) {\n                if (Math.abs(headPosition - task.blockAddress) < Math.abs(headPosition - actual.blockAddress)){\n                    actual = task;\n                }\n            });\n            queue = queue.filter(function (task) {\n                return task !== actual;\n            });\n            headMovement += Math.abs(headPosition - actual.blockAddress);\n            time += Math.abs(headPosition - actual.blockAddress);\n            headPosition = actual.blockAddress;\n            taskDone++;\n\n        }else {\n            time++;\n        }\n    }\n    return { headMovement, taskDone }\n}\n","export function edf(proc){\n    let i = 0;\n    let queue = [];\n    let time = 0;\n    let actual = undefined;\n    let headPosition = 0;\n    let headMovement = 0;\n    let taskDone = 0;\n    while (i < proc.length || queue.length !== 0) {\n        for (let p = i; p < proc.length; p++){\n            if (time >= proc[p].arrivalTime){\n                queue.push(proc[p]);\n                i++;\n            }\n        }\n        queue = queue.filter(function (task) {\n            return task.deadline >= Math.abs(headPosition - task.blockAddress) + time\n        });\n        if (queue.length !== 0) {\n            actual = queue[0];\n            queue.map(function (task) {\n                if (task.deadline < actual.deadline){\n                    actual = task;\n                }\n            });\n            queue = queue.filter(function (task) {\n                return task !== actual;\n            });\n            headMovement += Math.abs(headPosition - actual.blockAddress);\n            time += Math.abs(headPosition - actual.blockAddress);\n            headPosition = actual.blockAddress;\n            taskDone++;\n        }else {\n            time++;\n        }\n    }\n    return { headMovement, taskDone }\n}\n","export function fdscan(proc) {\n    let i = 0;\n    let queue = [];\n    let time = 0;\n    let actual = undefined;\n    let headPosition = 0;\n    let headMovement = 0;\n    let taskDone = 0;\n    while (i < proc.length || queue.length !== 0) {\n        for (let p = i; p < proc.length; p++){\n            if (time >= proc[p].arrivalTime){\n                queue.push(proc[p]);\n                i++;\n            }\n        }\n        queue = queue.filter(function (task) {\n            return task.deadline >= Math.abs(headPosition - task.blockAddress) + time\n        });\n        if (queue.length !== 0) {\n            actual = queue[0];\n            queue.map(function (task){\n                if (task.deadline - Math.abs(headPosition - task.blockAddress) + time < actual.deadline - Math.abs(headPosition - actual.blockAddress) + time){\n                    actual = task;\n                }\n            });\n            queue = queue.filter(function (task) {\n                return task !== actual;\n            });\n            headMovement += Math.abs(headPosition - actual.blockAddress);\n            time += Math.abs(headPosition - actual.blockAddress);\n            headPosition = actual.blockAddress;\n            taskDone++;\n        }else{\n            time++;\n        }\n    }\n    return { headMovement, taskDone }\n}\n\n\n","import {scan} from \"./scan\";\nimport {sstf} from \"./sstf\";\nimport {fcfs} from \"./fcfs\";\nimport {cscan} from \"./cscan\";\nimport {edf} from \"./edf\";\nimport {fdscan} from \"./fdscan\";\n\nclass SchedulerService{\n\n\n    constructor(tasks){\n        this.tasks = tasks;\n    }\n\n    start() {\n        let procString = JSON.stringify(this.tasks);\n        const results = {\n            sstf: sstf(JSON.parse(procString)),\n            fcfs: fcfs(JSON.parse(procString)),\n            scan: scan(JSON.parse(procString)),\n            cscan: cscan(JSON.parse(procString)),\n            edf: edf(JSON.parse(procString)),\n            fdscan: fdscan(JSON.parse(procString))\n        };\n        return results\n    }\n\n}\n\nexport default SchedulerService;\n// Disk scheduling algorithms\n// simulation of algorithms FCFS, SSTF, SCAN, C-SCAN, EDF, FD-SCAN.\n// Compare their execution time (estimated by the total movement of disk head).\n\n","import * as React from \"react\";\nimport {Button, withStyles} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {addTask, runScheduler} from \"../actions/TasksActions\";\n\n\n\n\nclass AddTaskComponent extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            arrivalTime: 0,\n            blockAddress: 0,\n            deadline: 0\n        };\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleStart = this.handleStart.bind(this);\n\n    }\n\n    handleAdd(event){\n        const { dispatch } = this.props;\n        const { arrivalTime, blockAddress, deadline } = this.state;\n        dispatch(addTask({\n            arrivalTime: arrivalTime < 1 ? 1: arrivalTime,\n            blockAddress: blockAddress < 0 ? 0 : blockAddress,\n            deadline: deadline < 1 ? 1 : deadline,\n            waitingTime: 0,\n        }));\n    };\n\n    handleChange(input, e) {\n        this.setState({\n            [input]: e.target.value\n        });\n    };\n    //\n    handleStart(){\n        const { dispatch, tasks } = this.props;\n        dispatch(runScheduler(tasks));\n    };\n\n\n    render(){\n        const { classes } = this.props;\n        return(\n            <div className={classes.root}>\n               <div className={classes.insideRoot}>\n\n\n                <TextField\n                    className={classes.marginTop}\n                    label=\"Arrival time\"\n                    type=\"number\"\n                    onChange={event => {this.handleChange('arrivalTime', event)}}\n                />\n                <br/>\n                <TextField\n                    label=\"Block address\"\n                    type=\"number\"\n                    onChange={event => {this.handleChange('blockAddress', event)}}\n                />\n                <br/>\n                <TextField\n                    label=\"Deadline\"\n                    type=\"number\"\n                    onChange={event => {this.handleChange('deadline', event)}}\n                />\n                <br/>\n                <br/>\n                <Button\n                    variant=\"contained\"\n                    onClick={this.handleAdd}\n                >\n                    ADD\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={this.handleStart}\n                >\n                    Start\n                </Button>\n               </div>\n            </div>\n        )\n    }\n\n}\nconst styles = {\n\n    root: {\n        display: \"inline-block\",\n        width: \"300px\",\n        height: \"300px\"\n\n    },\n    insideRoot: {\n        display: \"inline-block\"\n    },\n    marginTop: {\n        marginTop: \"15px\"\n    }\n};\nAddTaskComponent.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n    const {tasks} = state.TaskReducer;\n    return {tasks}\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(AddTaskComponent));\n","import {tasksConstants} from \"../constants/TasksConstants\";\nimport SchedulerService from \"../services/SchedulerService\";\n\n\nexport function addTask(newTask) {\n    return dispatch => {\n        const action = {\n            newTask,\n            type: tasksConstants.ADD_TASK\n        };\n        dispatch(action)\n    }\n}\n\nexport function runScheduler(tasks) {\n    return dispatch => {\n        const scheduler = new SchedulerService(tasks);\n        let results = scheduler.start();\n        const action = {\n            results: results,\n            type: tasksConstants.RUN_SCHEDULER\n        };\n        dispatch(action)\n    }\n}\n\n// export default addTask;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\n\nimport SchedulerResults from \"./components/SchedulerResults\";\nimport ShowTasks from \"./components/ShowTasks\";\nimport AddTaskComponent from \"./components/AddTaskComponent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {withStyles} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n\n  render() {\n      const { classes } = this.props;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n          <Grid container spacing={24} className={classes.grid}>\n              <Grid >\n                  <Paper className={classes.paper}><SchedulerResults/></Paper>\n              </Grid>\n              <Grid>\n                  <Paper className={classes.paper}><AddTaskComponent/></Paper>\n              </Grid>\n              <ShowTasks/>\n          </Grid>\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        display: \"inline-block\",\n        padding: \"15px\",\n        margin: \"20px\",\n    },\n    grid: {\n        margin: \"auto\",\n        width: \"auto\"\n    }\n});\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {tasksConstants} from \"../constants/TasksConstants\";\n\n\nconst initialState = {\n    tasks: [],\n    results: undefined,\n};\n\n\n\n\nexport function TaskReducer(state = initialState, action) {\n    switch (action.type) {\n        case tasksConstants.ADD_TASK:\n            return {\n                tasks: [...state.tasks, action.newTask],\n                results: state.results\n           };\n        case tasksConstants.RUN_SCHEDULER:\n            const { results } = action;\n            return{\n                ...state,\n                results: results\n            };\n        default:\n            return{\n                ...state\n            }\n    }\n\n\n}\n","import {combineReducers} from \"redux\";\nimport {TaskReducer} from \"./TaskReducer\";\n\nconst rootReducer = combineReducers({\n    TaskReducer,\n});\n\nexport default rootReducer;\n\n","import {createStore} from \"redux\";\nimport RootReducer from \"./RootReducer\";\nimport {applyMiddleware} from \"redux/es/redux\";\nimport thunk from 'redux-thunk';\n\n\n\nexport const store = createStore(\n    RootReducer,\n    applyMiddleware(thunk)\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from \"react-redux/es/components/Provider\";\nimport {store} from \"./reducers/store\";\n\nReactDOM.render(\n    <Provider store={store}><App /></Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}